[{"path":[]},{"path":"https://svglite.r-lib.org/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://svglite.r-lib.org/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://svglite.r-lib.org/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://svglite.r-lib.org/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://svglite.r-lib.org/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@posit.co. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://svglite.r-lib.org/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://svglite.r-lib.org/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://svglite.r-lib.org/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://svglite.r-lib.org/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://svglite.r-lib.org/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://svglite.r-lib.org/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://svglite.r-lib.org/articles/fonts.html","id":"system-font-aliases","dir":"Articles","previous_headings":"","what":"System font aliases","title":"Specifying fonts","text":"system_fonts takes named list font families argument. names typically correspond standard R faces can also alias non-standard families (though less useful): need support non-latin characters, choose fonts good Unicode coverage. “Arial Unicode MS” sans serif font good coverage available macOS Windows systems (latter, MS Office installed). Note font support kerning bold italic faces. Noto fontset provided Google well Han Sans family Adobe excellent coverage may available time rendering. can concern distribute SVG files Internet.","code":"fonts <- list(   sans = \"Helvetica\",   mono = \"Consolas\",   `Times New Roman` = \"DejaVu Serif\" )  ss <- svgstring(system_fonts = fonts) plot(1:10) text(0.8, 0.8, \"Some text\", family = \"mono\") text(0.2, 0.2, \"Other text\", family = \"Times New Roman\") dev.off() ss() svglite(\"Rplots.svg\", system_fonts = list(sans = \"Arial Unicode MS\")) plot.new() text(0.5, 0.5, \"正規分布\") dev.off()"},{"path":"https://svglite.r-lib.org/articles/fonts.html","id":"user-font-aliases","dir":"Articles","previous_headings":"","what":"User font aliases","title":"Specifying fonts","text":"addition system fonts, can also provide fonts necessarily installed system (.e., fonts live user space). main reason generate reproducible SVG files different platforms can different versions font thus produce different text metrics. user_fonts arguments takes either paths font files, fonts fontquiver package, list specifies alias. Whereas system_fonts gets named list families argument, user_fonts takes named tree lists families (sans, serif, mono symbol) faces (plain, italic, bold, bolditalic, symbol): can also control font gets written font-family fields SVGs supplying list containing alias file elements: fontquiver fonts particularly useful creating reproducible SVG files. vdiffr package uses svglite fontquiver fonts create visual unit tests reliably across platforms. Liberation fontset appropriate usage features 12 combinations standard R families faces. addition fontquiver provides Symbola symbol font. function fontquiver::font_families() produces list appropriate structure can directly supplied svglite:","code":"# Using ttf files from fontquiver here, but it could be any ttf some_file <- fontquiver::font(\"Liberation\", \"Sans\", \"Regular\")$ttf other_file <- fontquiver::font(\"Liberation\", \"Sans\", \"Italic\")$ttf serif_file <- fontquiver::font(\"Liberation\", \"serif\", \"Italic\")$ttf  # The outer named list contains families while the inner named list # contains faces: fonts <- list(   sans = list(     plain = some_file,     italic = other_file   ),   serif = list(plain = serif_file) )  ss <- svglite(\"plot.svg\", user_fonts = fonts) plot.new() text(0.5, 0.5, \"Sans Plain text\") text(0.2, 0.2, \"Sans Italic text\", font = 3) text(0.8, 0.8, \"Serif text\", family = \"serif\") dev.off() file_with_alias <- list(alias = \"Foobar Font\", file = other_file) fonts <- list(sans = list(plain = file_with_alias))  ss <- svgstring(user_fonts = fonts) plot(1:10) text(0.5, 0.5, \"Sans text\") dev.off() ss() fonts <- fontquiver::font_families(\"Liberation\") fonts$symbol$symbol <- fontquiver::font_symbol(\"Symbola\") str(fonts, 2)  svglite(\"reproducible.svg\", user_fonts = fonts) plot(1:10) dev.off()"},{"path":"https://svglite.r-lib.org/articles/fonts.html","id":"debugging-font-matching","dir":"Articles","previous_headings":"","what":"Debugging font matching","title":"Specifying fonts","text":"systemfonts package used match font family names fonts installed system. systemfonts always return valid font, requested font badly misspelled missing, default returned. test expected font matched can use match_font() font_info() functions systemfonts:","code":"systemfonts::match_font(\"Helvetica\") #> Warning: `match_font()` was deprecated in systemfonts 1.1.0. #> ℹ Please use `match_fonts()` instead. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning #> was generated. #> $path #> [1] \"/usr/share/fonts/opentype/urw-base35/NimbusSans-Regular.otf\" #>  #> $index #> [1] 0 #>  #> $features #> integer(0) systemfonts::font_info(\"Helvetica\", bold = TRUE) #> # A data frame: 1 × 24 #>   path   index family style italic bold  monospace weight width kerning #>   <chr>  <int> <chr>  <chr> <lgl>  <lgl> <lgl>     <ord>  <ord> <lgl>   #> 1 /usr/…     0 Nimbu… Bold  FALSE  TRUE  FALSE     bold   norm… FALSE   #> # ℹ 14 more variables: color <lgl>, scalable <lgl>, vertical <lgl>, #> #   n_glyphs <int>, n_sizes <int>, n_charmaps <int>, bbox <list>, #> #   max_ascend <dbl>, max_descend <dbl>, max_advance_width <dbl>, #> #   max_advance_height <dbl>, lineheight <dbl>, underline_pos <dbl>, #> #   underline_size <dbl>"},{"path":"https://svglite.r-lib.org/articles/scaling.html","id":"scaling-svg-outputs","dir":"Articles","previous_headings":"","what":"Scaling SVG outputs","title":"Scaling Issues","text":"SVG files produced svglite include width height properties. deliberate choice intended make easier fit fluidly SVG figure enclosing container. scaling straightforward requires understanding viewBox SVG attribute included SVGs produced svglite. property defines aspect ratio plot (well user coordinate system, see next section).","code":""},{"path":"https://svglite.r-lib.org/articles/scaling.html","id":"fluid-scaling","dir":"Articles","previous_headings":"Scaling SVG outputs","what":"Fluid scaling","title":"Scaling Issues","text":"viewBox determined width height arguments svglite’s device functions (10’’ x 8’’ default). Although dimensions supplied inches, viewBox’s user coordinate system completely unit agnostic. main effect thus determine aspect ratio. Since dimensions provided, dimensions enclosing container used instead SVG rescaled fit container (although Internet Explorer currently requires CSS tricks get behaviour, see https://tympanus.net/codrops/2014/08/19/making-svgs-responsive--css/). Aspect ratio preserved default figure scaled . details aspect ratio preserved can adjusted multiple ways via preserveAspectRatio attribute. See https://www.sarasoueidan.com/blog/svg-coordinate-systems/ information property. useful resource: https://css-tricks.com/scale-svg/","code":""},{"path":"https://svglite.r-lib.org/articles/scaling.html","id":"natural-scaling","dir":"Articles","previous_headings":"Scaling SVG outputs","what":"Natural scaling","title":"Scaling Issues","text":"Another strategy needed order scale figure make text within SVG consistent text surrounding web page. useful, instance, create consistent appearance HTML presentation. Since user coordinate system defined viewBox unitless, need map figure natural dimensions. ensure correspondence scale figure web page. mentioned , natural scale svglite’s figures points determined width height arguments supply device functions (10’’ x 8’’ default). Although dimensions specified inches, coordinate system scaled points. Counting 72 points per inch, default SVG surface thus 720 x 576 pt. Note CSS standard defines 12pt equal 16px, default size text browsers. Since 12pt default text size svglite well, SVG scaled natural dimensions appear seamless web text 16px. text web page another size, compute scale factor adjust dimensions SVG accordingly. sum , displaying plot according natural dimensions requires providing user agent information lengths defined within SVG actually mean. several ways achieve . First can edit SVG enclose another pair <svg> tags defines height width. root <svg> element determines final dimensions figure. second way enclose figure <div> tag appropriate dimensions let SVG figure rescale container (cf. section fluid scaling): Finally, can directly specify dimensions <img> <object> tag embedding figure. Note dimension attributes tags accept arbitrary units, supply dimensions pixels. Just multiply width height measured points factor 16/12:","code":"<div style=\"width: 720pt; height: 576pt\">   <img src=\"figure.svg\"> <\/div> <img src=\"figure.svg\" width=\"960\" height=\"768\">"},{"path":[]},{"path":"https://svglite.r-lib.org/articles/scaling.html","id":"device-scaling","dir":"Articles","previous_headings":"Internal notes","what":"Device scaling","title":"Scaling Issues","text":"graphics devices, svglite scaled big points (1/72 inch) rather pica points (1/72.27 inch). Note LaTeX grid graphics system ggplot2 based, points refer pica points. Big points denoted LaTeX bp CSS pt. use latter notation. See https://tex.stackexchange.com//200968/19755 historical background units. conversion device units physical dimensions determined DevDesc parameter ipr. IPR stands inches per raster (native device coordinates sometimes called rasters R terminology) set 1/72 svglite. device’s physical dimensions set following DevDesc parameters (width height plot dimensions set user inches): default svglite plot surface thus 720 x 576 pt.","code":""},{"path":"https://svglite.r-lib.org/articles/scaling.html","id":"scaling-of-graphical-elements","dir":"Articles","previous_headings":"Internal notes","what":"Scaling of graphical elements","title":"Scaling Issues","text":"conventional fundamental line width (lwd = 1) correspond line width 1/96 inch svglite obeys convention. Also, like R graphics devices, svglite interprets point sizes directly big points (e.g. ps graphical parameter fontsize argument device functions). default font size 12pt. Text metrics computed systemfonts, uses freetype extract metrics glyph calculate string dimensions . Text metrics calculated 1000dpi based cex * ps font size. Base graphics system also makes use obscure cra parameter relatives (cin, cxy, csi). cra serves crude measure default character height width default fontsize provided device called (12pt svgilte). main effect parameter (specifically, height component) change relationship margin parameters mar/mai oma/omi. margins mar oma specified line units character height used measure line spacing convert margins measured lines physical margins. devices, cra[0] set 0.9 * pointsize cra[1] 1.2 * pointsize. parameters completely unused Grid graphics system.","code":""},{"path":"https://svglite.r-lib.org/articles/scaling.html","id":"svg-output","dir":"Articles","previous_headings":"Internal notes","what":"SVG output","title":"Scaling Issues","text":"SVG output sets viewBox (user coordinate system) values scaled big points. viewBox: width height set dd->right dd->bottom respectively (values determined user-supplied figure width height). Line width: 1 lwd equal 1/96 inch. svglite gets values scaled device coordinates (big points), line width multiplied 72/96. Text: gdtools returns metrics scaled big points transformation needed. need add px units work around rendering bug Firefox. Note viewBox set , pixel equals one unit user coordinate system thus actually represents big point.","code":""},{"path":"https://svglite.r-lib.org/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Hadley Wickham. Author. Lionel Henry. Author. Thomas Lin Pedersen. Maintainer, author. T Jake Luciani. Author. Matthieu Decorde. Author. Vaudor Lise. Author. Tony Plate. Contributor.           Early line dashing code David Gohel. Contributor.           Line dashing code early raster code Yixuan Qiu. Contributor.           Improved styles; polypath implementation Håkon Malmedal. Contributor.           Opacity code . Copyright holder, funder.           03wc8by49","code":""},{"path":"https://svglite.r-lib.org/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wickham H, Henry L, Pedersen T, Luciani T, Decorde M, Lise V (2025). svglite: 'SVG' Graphics Device. R package version 2.1.3.9000, https://svglite.r-lib.org.","code":"@Manual{,   title = {svglite: An 'SVG' Graphics Device},   author = {Hadley Wickham and Lionel Henry and Thomas Lin Pedersen and T Jake Luciani and Matthieu Decorde and Vaudor Lise},   year = {2025},   note = {R package version 2.1.3.9000},   url = {https://svglite.r-lib.org}, }"},{"path":"https://svglite.r-lib.org/index.html","id":"svglite-","dir":"","previous_headings":"","what":"An SVG Graphics Device","title":"An SVG Graphics Device","text":"svglite graphics device produces clean svg output, suitable use web, hand editing. Compared built-svg(), svglite produces smaller files, leaves text , making easier edit result creation. also supports multiple nice features embedding web fonts.","code":""},{"path":"https://svglite.r-lib.org/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An SVG Graphics Device","text":"svglite available CRAN using install.packages(\"svglite\"). can install development version github :","code":"# install.packages(\"pak\") pak::pak(\"r-lib/svglite\")"},{"path":"https://svglite.r-lib.org/index.html","id":"motivation","dir":"","previous_headings":"","what":"Motivation","title":"An SVG Graphics Device","text":"grDevices package bundled R already comes SVG device (using eponymous svg() call). development svglite motivated following considerations:","code":""},{"path":"https://svglite.r-lib.org/index.html","id":"speed","dir":"","previous_headings":"Motivation","what":"Speed","title":"An SVG Graphics Device","text":"svglite() considerably faster svg(). rendering SVGs dynamically serve web can quite important:","code":"library(svglite)  x <- runif(1e3) y <- runif(1e3) tmp1 <- tempfile() tmp2 <- tempfile()  svglite_test <- function() {   svglite(tmp1)   plot(x, y)   dev.off() } svg_test <- function() {   svg(tmp2, onefile = TRUE)   plot(x, y)   dev.off() }  bench::mark(svglite_test(), svg_test(), min_iterations = 250, check = FALSE) #> # A tibble: 2 × 6 #>   expression          min   median `itr/sec` mem_alloc `gc/sec` #>   <bch:expr>     <bch:tm> <bch:tm>     <dbl> <bch:byt>    <dbl> #> 1 svglite_test()   1.85ms   1.93ms      514.     610KB     4.06 #> 2 svg_test()       6.19ms   6.31ms      158.     224KB     0"},{"path":"https://svglite.r-lib.org/index.html","id":"file-size","dir":"","previous_headings":"Motivation","what":"File size","title":"An SVG Graphics Device","text":"Another point high relevance serving SVGs web size. svglite() produces much smaller files cases, compressing make .svgz (gzipped svg) worthwhile. svglite supports compressed output directly triggered provided path \".svgz\" (\".svg.gz\") extension.","code":"# svglite fs::file_size(tmp1) #> 75K  # svg fs::file_size(tmp2) #> 327K tmp3 <- tempfile(fileext = \".svgz\") svglite(tmp3) plot(x, y) invisible(dev.off())  # svglite - svgz fs::file_size(tmp3) #> 9.43K"},{"path":"https://svglite.r-lib.org/index.html","id":"editability","dir":"","previous_headings":"Motivation","what":"Editability","title":"An SVG Graphics Device","text":"One main reasons size difference size output svglite() svg() fact svglite() encodes text styled <text> elements, whereas svg() converts glyphs polygons renders . latter approach means output svg() require font present system displays SVG makes less impossible edit text fact. svglite focuses providing maximal editability output, can open result vector drawing program Inkscape Illustrator polish output choose.","code":""},{"path":"https://svglite.r-lib.org/index.html","id":"font-support","dir":"","previous_headings":"Motivation","what":"Font support","title":"An SVG Graphics Device","text":"svglite uses systemfonts font discovery means installed fonts system available use. systemfonts foundation means fonts registered register_font() register_variant() also available. contains non-standard weights OpenType features (e.g. ligatures tabular numerics) correctly encoded style block. systemfonts also allows embed webfont @imports file ensure file looks expected even systems without used font installed.","code":""},{"path":"https://svglite.r-lib.org/index.html","id":"building-svglite","dir":"","previous_headings":"","what":"Building svglite","title":"An SVG Graphics Device","text":"section relevant building svglite scratch, opposed installing pre-built package CRAN. Building vdiffr requires system dependency libpng. vdiffr doesn’t build-time configuration, R configuration must point libpng’s include lib folders. instance macOS, install libpng : make sure ~/.R/Makevars knows Homebrew’s include lib folders libpng now installed. arm64 hardware, :","code":"brew install libpng CPPFLAGS += -I/opt/homebrew/include LDFLAGS += -L/opt/homebrew/lib"},{"path":"https://svglite.r-lib.org/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"An SVG Graphics Device","text":"Please note svglite project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://svglite.r-lib.org/reference/create_svgz.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an svg file to svgz, overwriting the old file — create_svgz","title":"Convert an svg file to svgz, overwriting the old file — create_svgz","text":"Convert svg file svgz, overwriting old file","code":""},{"path":"https://svglite.r-lib.org/reference/create_svgz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an svg file to svgz, overwriting the old file — create_svgz","text":"","code":"create_svgz(file)"},{"path":"https://svglite.r-lib.org/reference/create_svgz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an svg file to svgz, overwriting the old file — create_svgz","text":"file path file convert","code":""},{"path":"https://svglite.r-lib.org/reference/editSVG.html","id":null,"dir":"Reference","previous_headings":"","what":"Run plotting code and open svg in OS/system default svg viewer or editor. — editSVG","title":"Run plotting code and open svg in OS/system default svg viewer or editor. — editSVG","text":"useful primarily testing post-processing SVG.","code":""},{"path":"https://svglite.r-lib.org/reference/editSVG.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run plotting code and open svg in OS/system default svg viewer or editor. — editSVG","text":"","code":"editSVG(code, ..., width = NA, height = NA)"},{"path":"https://svglite.r-lib.org/reference/editSVG.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run plotting code and open svg in OS/system default svg viewer or editor. — editSVG","text":"code Plotting code execute. ... arguments passed svglite. height, width Height width inches.","code":""},{"path":"https://svglite.r-lib.org/reference/editSVG.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run plotting code and open svg in OS/system default svg viewer or editor. — editSVG","text":"","code":"if (interactive()) {   editSVG(plot(1:10))   editSVG(contour(volcano)) }"},{"path":"https://svglite.r-lib.org/reference/font_face.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a font-face specification — font_face","title":"Create a font-face specification — font_face","text":"Webfonts SVG HTML can either specified manually using @font-face -rule, imported e.g. Google Fonts using @import -rule. font_face() helps create valid @font-face block web_fonts argument svglite() svgstring() functions.","code":""},{"path":"https://svglite.r-lib.org/reference/font_face.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a font-face specification — font_face","text":"","code":"font_face(   family,   woff2 = NULL,   woff = NULL,   ttf = NULL,   otf = NULL,   eot = NULL,   svg = NULL,   local = NULL,   weight = NULL,   style = NULL,   range = NULL,   variant = NULL,   stretch = NULL,   feature_setting = NULL,   variation_setting = NULL )"},{"path":"https://svglite.r-lib.org/reference/font_face.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a font-face specification — font_face","text":"family font family name font respond . woff2, woff, ttf, otf, eot, svg URLs font different formats. least one must given. Best browser support provided woff format. local One font names local installations font may . local font found either given names used download happen. weight optional value font-weight descriptor style optional value font-style descriptor range optional value unicode-range descriptor give range unicode values font support variant optional value font-variant descriptor stretch optional value font-stretch descriptor feature_setting optional value font-feature-settings descriptor recommended avoid using possible variation_setting optional value font-variation-settings descriptor.","code":""},{"path":"https://svglite.r-lib.org/reference/font_face.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a font-face specification — font_face","text":"character string @font-face block.","code":""},{"path":"https://svglite.r-lib.org/reference/font_face.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a font-face specification — font_face","text":"","code":"font_face(   family = \"MyHelvetica\",   ttf = \"MgOpenModernaBold.ttf\",   local = c(\"Helvetica Neue Bold\", \"HelveticaNeue-Bold\"),   weight = \"bold\" ) #>     @font-face { #>       font-family: \"MyHelvetica\"; #>       src: local(\"Helvetica Neue Bold\"), #>            local(\"HelveticaNeue-Bold\"), #>            url(\"MgOpenModernaBold.ttf\") format(\"truetype\"); #>       font-weight: bold; #>     }"},{"path":"https://svglite.r-lib.org/reference/htmlSVG.html","id":null,"dir":"Reference","previous_headings":"","what":"Run plotting code and view svg in RStudio Viewer or web browser. — htmlSVG","title":"Run plotting code and view svg in RStudio Viewer or web browser. — htmlSVG","text":"useful primarily testing. Requires htmltools package.","code":""},{"path":"https://svglite.r-lib.org/reference/htmlSVG.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run plotting code and view svg in RStudio Viewer or web browser. — htmlSVG","text":"","code":"htmlSVG(code, ...)"},{"path":"https://svglite.r-lib.org/reference/htmlSVG.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run plotting code and view svg in RStudio Viewer or web browser. — htmlSVG","text":"code Plotting code execute. ... arguments passed svglite.","code":""},{"path":"https://svglite.r-lib.org/reference/htmlSVG.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run plotting code and view svg in RStudio Viewer or web browser. — htmlSVG","text":"","code":"if (interactive() && require(\"htmltools\")) {   htmlSVG(plot(1:10))   htmlSVG(hist(rnorm(100))) }"},{"path":"https://svglite.r-lib.org/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. systemfonts font_feature, register_font, register_variant","code":""},{"path":"https://svglite.r-lib.org/reference/stringSVG.html","id":null,"dir":"Reference","previous_headings":"","what":"Run plotting code and return svg as string — stringSVG","title":"Run plotting code and return svg as string — stringSVG","text":"useful primarily testing can used alternative svgstring().","code":""},{"path":"https://svglite.r-lib.org/reference/stringSVG.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run plotting code and return svg as string — stringSVG","text":"","code":"stringSVG(code, ...)"},{"path":"https://svglite.r-lib.org/reference/stringSVG.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run plotting code and return svg as string — stringSVG","text":"code Plotting code execute. ... arguments passed svglite.","code":""},{"path":"https://svglite.r-lib.org/reference/stringSVG.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run plotting code and return svg as string — stringSVG","text":"","code":"stringSVG(plot(1:10)) #> Saving 7\" x 7\" image #> <?xml version='1.0' encoding='UTF-8' ?> #> <svg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='504.00pt' height='504.00pt' viewBox='0 0 504.00 504.00'> #> <g class='svglite'> #> <defs> #>   <style type='text/css'><![CDATA[ #>     .svglite line, .svglite polyline, .svglite polygon, .svglite path, .svglite rect, .svglite circle { #>       fill: none; #>       stroke: #000000; #>       stroke-linecap: round; #>       stroke-linejoin: round; #>       stroke-miterlimit: 10.00; #>     } #>     .svglite text { #>       white-space: pre; #>     } #>   ]]><\/style> #> <\/defs> #> <rect width='100%' height='100%' style='stroke: none; fill: #FFFFFF;'/> #> <defs> #>   <clipPath id='cpMC4wMHw1MDQuMDB8MC4wMHw1MDQuMDA='> #>     <rect x='0.00' y='0.00' width='504.00' height='504.00' /> #>   <\/clipPath> #> <\/defs> #> <g clip-path='url(#cpMC4wMHw1MDQuMDB8MC4wMHw1MDQuMDA=)'> #> <\/g> #> <defs> #>   <clipPath id='cpNTkuMDR8NDczLjc2fDU5LjA0fDQzMC41Ng=='> #>     <rect x='59.04' y='59.04' width='414.72' height='371.52' /> #>   <\/clipPath> #> <\/defs> #> <g clip-path='url(#cpNTkuMDR8NDczLjc2fDU5LjA0fDQzMC41Ng==)'> #> <circle cx='74.40' cy='416.80' r='2.70' style='stroke-width: 0.75;' /> #> <circle cx='117.07' cy='378.58' r='2.70' style='stroke-width: 0.75;' /> #> <circle cx='159.73' cy='340.36' r='2.70' style='stroke-width: 0.75;' /> #> <circle cx='202.40' cy='302.13' r='2.70' style='stroke-width: 0.75;' /> #> <circle cx='245.07' cy='263.91' r='2.70' style='stroke-width: 0.75;' /> #> <circle cx='287.73' cy='225.69' r='2.70' style='stroke-width: 0.75;' /> #> <circle cx='330.40' cy='187.47' r='2.70' style='stroke-width: 0.75;' /> #> <circle cx='373.07' cy='149.24' r='2.70' style='stroke-width: 0.75;' /> #> <circle cx='415.73' cy='111.02' r='2.70' style='stroke-width: 0.75;' /> #> <circle cx='458.40' cy='72.80' r='2.70' style='stroke-width: 0.75;' /> #> <\/g> #> <g clip-path='url(#cpMC4wMHw1MDQuMDB8MC4wMHw1MDQuMDA=)'> #> <line x1='117.07' y1='430.56' x2='458.40' y2='430.56' style='stroke-width: 0.75;' /> #> <line x1='117.07' y1='430.56' x2='117.07' y2='437.76' style='stroke-width: 0.75;' /> #> <line x1='202.40' y1='430.56' x2='202.40' y2='437.76' style='stroke-width: 0.75;' /> #> <line x1='287.73' y1='430.56' x2='287.73' y2='437.76' style='stroke-width: 0.75;' /> #> <line x1='373.07' y1='430.56' x2='373.07' y2='437.76' style='stroke-width: 0.75;' /> #> <line x1='458.40' y1='430.56' x2='458.40' y2='437.76' style='stroke-width: 0.75;' /> #> <text x='117.07' y='456.48' text-anchor='middle' style='font-size: 12.00px; font-family: \"Liberation Sans\";' textLength='7.64px' lengthAdjust='spacingAndGlyphs'>2<\/text> #> <text x='202.40' y='456.48' text-anchor='middle' style='font-size: 12.00px; font-family: \"Liberation Sans\";' textLength='7.64px' lengthAdjust='spacingAndGlyphs'>4<\/text> #> <text x='287.73' y='456.48' text-anchor='middle' style='font-size: 12.00px; font-family: \"Liberation Sans\";' textLength='7.64px' lengthAdjust='spacingAndGlyphs'>6<\/text> #> <text x='373.07' y='456.48' text-anchor='middle' style='font-size: 12.00px; font-family: \"Liberation Sans\";' textLength='7.64px' lengthAdjust='spacingAndGlyphs'>8<\/text> #> <text x='458.40' y='456.48' text-anchor='middle' style='font-size: 12.00px; font-family: \"Liberation Sans\";' textLength='15.28px' lengthAdjust='spacingAndGlyphs'>10<\/text> #> <line x1='59.04' y1='378.58' x2='59.04' y2='72.80' style='stroke-width: 0.75;' /> #> <line x1='59.04' y1='378.58' x2='51.84' y2='378.58' style='stroke-width: 0.75;' /> #> <line x1='59.04' y1='302.13' x2='51.84' y2='302.13' style='stroke-width: 0.75;' /> #> <line x1='59.04' y1='225.69' x2='51.84' y2='225.69' style='stroke-width: 0.75;' /> #> <line x1='59.04' y1='149.24' x2='51.84' y2='149.24' style='stroke-width: 0.75;' /> #> <line x1='59.04' y1='72.80' x2='51.84' y2='72.80' style='stroke-width: 0.75;' /> #> <text transform='translate(41.76,378.58) rotate(-90)' text-anchor='middle' style='font-size: 12.00px; font-family: \"Liberation Sans\";' textLength='7.64px' lengthAdjust='spacingAndGlyphs'>2<\/text> #> <text transform='translate(41.76,302.13) rotate(-90)' text-anchor='middle' style='font-size: 12.00px; font-family: \"Liberation Sans\";' textLength='7.64px' lengthAdjust='spacingAndGlyphs'>4<\/text> #> <text transform='translate(41.76,225.69) rotate(-90)' text-anchor='middle' style='font-size: 12.00px; font-family: \"Liberation Sans\";' textLength='7.64px' lengthAdjust='spacingAndGlyphs'>6<\/text> #> <text transform='translate(41.76,149.24) rotate(-90)' text-anchor='middle' style='font-size: 12.00px; font-family: \"Liberation Sans\";' textLength='7.64px' lengthAdjust='spacingAndGlyphs'>8<\/text> #> <text transform='translate(41.76,72.80) rotate(-90)' text-anchor='middle' style='font-size: 12.00px; font-family: \"Liberation Sans\";' textLength='15.28px' lengthAdjust='spacingAndGlyphs'>10<\/text> #> <polygon points='59.04,430.56 473.76,430.56 473.76,59.04 59.04,59.04 ' style='stroke-width: 0.75;' /> #> <text x='266.40' y='485.28' text-anchor='middle' style='font-size: 12.00px; font-family: \"Liberation Sans\";' textLength='33.08px' lengthAdjust='spacingAndGlyphs'>Index<\/text> #> <text transform='translate(12.96,244.80) rotate(-90)' text-anchor='middle' style='font-size: 12.00px; font-family: \"Liberation Sans\";' textLength='26.97px' lengthAdjust='spacingAndGlyphs'>1:10<\/text> #> <\/g> #> <\/g> #> <\/svg>"},{"path":"https://svglite.r-lib.org/reference/svglite-package.html","id":null,"dir":"Reference","previous_headings":"","what":"svglite: An 'SVG' Graphics Device — svglite-package","title":"svglite: An 'SVG' Graphics Device — svglite-package","text":"graphics device R produces 'Scalable Vector Graphics'. 'svglite' fork older 'RSvgDevice' package.","code":""},{"path":[]},{"path":"https://svglite.r-lib.org/reference/svglite-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"svglite: An 'SVG' Graphics Device — svglite-package","text":"Maintainer: Thomas Lin Pedersen thomas.pedersen@posit.co (ORCID) Authors: Hadley Wickham hadley@posit.co Lionel Henry lionel@posit.co T Jake Luciani jake@apache.org Matthieu Decorde matthieu.decorde@ens-lyon.fr Vaudor Lise lise.vaudor@ens-lyon.fr contributors: Tony Plate (Early line dashing code) [contributor] David Gohel (Line dashing code early raster code) [contributor] Yixuan Qiu (Improved styles; polypath implementation) [contributor] Håkon Malmedal (Opacity code) [contributor] Posit Software, PBC (03wc8by49) [copyright holder, funder]","code":""},{"path":"https://svglite.r-lib.org/reference/svglite.html","id":null,"dir":"Reference","previous_headings":"","what":"An SVG Graphics Driver — svglite","title":"An SVG Graphics Driver — svglite","text":"function produces graphics compliant current w3 svg XML standard. driver output currently specifying DOCTYPE DTD.","code":""},{"path":"https://svglite.r-lib.org/reference/svglite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An SVG Graphics Driver — svglite","text":"","code":"svglite(   filename = \"Rplot%03d.svg\",   width = 10,   height = 8,   bg = \"white\",   pointsize = 12,   standalone = TRUE,   system_fonts = list(),   user_fonts = list(),   web_fonts = list(),   id = NULL,   fix_text_size = TRUE,   scaling = 1,   always_valid = FALSE,   file )"},{"path":"https://svglite.r-lib.org/reference/svglite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"An SVG Graphics Driver — svglite","text":"filename file output appear. height, width Height width inches. bg Default background color plot (defaults \"white\"). pointsize Default point size. standalone Produce standalone svg file? FALSE, omits xml header default namespace. system_fonts Consider using systemfonts::register_font() instead. Named list font names aliased fonts installed system. unspecified, R default families sans, serif, mono symbol aliased family returned font_info(). user_fonts Consider using systemfonts::register_font() instead. Named list fonts aliased font files provided user rather fonts properly installed system. aliases can fonts fontquiver package, strings containing path font file, list containing name file elements name indicating font alias SVG output file path font file. web_fonts list containing web fonts use SVG. fonts still need available locally computer running code, viewers final SVG need font specified web font. Web fonts can either specified using font_face() given single string case taken URL's @import directive e.g. Google Fonts. id character vector ids assign generated SVG's. creating SVG files supplied ids exceeding SVG's id tag warning thrown. fix_text_size width strings fixed change svg renderers depending font rendering? Defaults TRUE. TRUE string textLength CSS property set width calculated systemfonts lengthAdjust='spacingAndGlyphs'. Setting FALSE can beneficial heavy post-processing may change content style strings, may lead inconsistencies strings graphic elements depend dimensions string (e.g. label borders background). scaling scaling factor apply rendered line width text size. Useful getting right sizing dimension need. always_valid svgfile valid svg file written ? Setting TRUE incur considerable performance hit (>50% additional rendering time) set TRUE file parsed still written . file Identical filename. Provided backward compatibility.","code":""},{"path":"https://svglite.r-lib.org/reference/svglite.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"An SVG Graphics Driver — svglite","text":"svglite provides two ways controlling fonts: system fonts aliases user fonts aliases. Supplying font alias two effects. First determines font-family property text anchors SVG output. Secondly, font used determine dimensions graphical elements thus influence overall aspect plots. means optimal display, font must available computer used create svg, computer used render svg. See fonts vignette information.","code":""},{"path":"https://svglite.r-lib.org/reference/svglite.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"An SVG Graphics Driver — svglite","text":"W3C Scalable Vector Graphics (SVG): https://www.w3.org/Graphics/SVG/","code":""},{"path":[]},{"path":"https://svglite.r-lib.org/reference/svglite.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"An SVG Graphics Driver — svglite","text":"driver written T Jake Luciani jakeluciani@yahoo.com 2012: updated Matthieu Decorde matthieu.decorde@ens-lyon.fr","code":""},{"path":"https://svglite.r-lib.org/reference/svglite.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"An SVG Graphics Driver — svglite","text":"","code":"# Save to file svglite(tempfile(\"Rplots.svg\")) plot(1:11, (-5:5)^2, type = \"b\", main = \"Simple Example\") dev.off() #> pdf  #>   2"},{"path":"https://svglite.r-lib.org/reference/svgstring.html","id":null,"dir":"Reference","previous_headings":"","what":"Access current SVG as a string. — svgstring","title":"Access current SVG as a string. — svgstring","text":"variation svglite makes easy access current value string.","code":""},{"path":"https://svglite.r-lib.org/reference/svgstring.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access current SVG as a string. — svgstring","text":"","code":"svgstring(   width = 10,   height = 8,   bg = \"white\",   pointsize = 12,   standalone = TRUE,   system_fonts = list(),   user_fonts = list(),   web_fonts = list(),   id = NULL,   fix_text_size = TRUE,   scaling = 1 )"},{"path":"https://svglite.r-lib.org/reference/svgstring.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access current SVG as a string. — svgstring","text":"height, width Height width inches. bg Default background color plot (defaults \"white\"). pointsize Default point size. standalone Produce standalone svg file? FALSE, omits xml header default namespace. system_fonts Consider using systemfonts::register_font() instead. Named list font names aliased fonts installed system. unspecified, R default families sans, serif, mono symbol aliased family returned font_info(). user_fonts Consider using systemfonts::register_font() instead. Named list fonts aliased font files provided user rather fonts properly installed system. aliases can fonts fontquiver package, strings containing path font file, list containing name file elements name indicating font alias SVG output file path font file. web_fonts list containing web fonts use SVG. fonts still need available locally computer running code, viewers final SVG need font specified web font. Web fonts can either specified using font_face() given single string case taken URL's @import directive e.g. Google Fonts. id character vector ids assign generated SVG's. creating SVG files supplied ids exceeding SVG's id tag warning thrown. fix_text_size width strings fixed change svg renderers depending font rendering? Defaults TRUE. TRUE string textLength CSS property set width calculated systemfonts lengthAdjust='spacingAndGlyphs'. Setting FALSE can beneficial heavy post-processing may change content style strings, may lead inconsistencies strings graphic elements depend dimensions string (e.g. label borders background). scaling scaling factor apply rendered line width text size. Useful getting right sizing dimension need.","code":""},{"path":"https://svglite.r-lib.org/reference/svgstring.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access current SVG as a string. — svgstring","text":"function arguments: call function get current value string.","code":""},{"path":"https://svglite.r-lib.org/reference/svgstring.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Access current SVG as a string. — svgstring","text":"See svglite() documentation information specifying fonts.","code":""},{"path":"https://svglite.r-lib.org/reference/svgstring.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Access current SVG as a string. — svgstring","text":"","code":"s <- svgstring() s() #>   plot.new() s() #> <?xml version='1.0' encoding='UTF-8' ?> #> <svg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='720.00pt' height='576.00pt' viewBox='0 0 720.00 576.00'> #> <g class='svglite'> #> <defs> #>   <style type='text/css'><![CDATA[ #>     .svglite line, .svglite polyline, .svglite polygon, .svglite path, .svglite rect, .svglite circle { #>       fill: none; #>       stroke: #000000; #>       stroke-linecap: round; #>       stroke-linejoin: round; #>       stroke-miterlimit: 10.00; #>     } #>     .svglite text { #>       white-space: pre; #>     } #>   ]]><\/style> #> <\/defs> #> <rect width='100%' height='100%' style='stroke: none; fill: #FFFFFF;'/> #> <defs> #>   <clipPath id='cpMC4wMHw3MjAuMDB8MC4wMHw1NzYuMDA='> #>     <rect x='0.00' y='0.00' width='720.00' height='576.00' /> #>   <\/clipPath> #> <\/defs> #> <g clip-path='url(#cpMC4wMHw3MjAuMDB8MC4wMHw1NzYuMDA=)'> #> <\/g> #> <\/svg> text(0.5, 0.5, \"Hi!\") s() #> <?xml version='1.0' encoding='UTF-8' ?> #> <svg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='720.00pt' height='576.00pt' viewBox='0 0 720.00 576.00'> #> <g class='svglite'> #> <defs> #>   <style type='text/css'><![CDATA[ #>     .svglite line, .svglite polyline, .svglite polygon, .svglite path, .svglite rect, .svglite circle { #>       fill: none; #>       stroke: #000000; #>       stroke-linecap: round; #>       stroke-linejoin: round; #>       stroke-miterlimit: 10.00; #>     } #>     .svglite text { #>       white-space: pre; #>     } #>   ]]><\/style> #> <\/defs> #> <rect width='100%' height='100%' style='stroke: none; fill: #FFFFFF;'/> #> <defs> #>   <clipPath id='cpMC4wMHw3MjAuMDB8MC4wMHw1NzYuMDA='> #>     <rect x='0.00' y='0.00' width='720.00' height='576.00' /> #>   <\/clipPath> #> <\/defs> #> <g clip-path='url(#cpMC4wMHw3MjAuMDB8MC4wMHw1NzYuMDA=)'> #> <\/g> #> <defs> #>   <clipPath id='cpNTkuMDR8Njg5Ljc2fDU5LjA0fDUwMi41Ng=='> #>     <rect x='59.04' y='59.04' width='630.72' height='443.52' /> #>   <\/clipPath> #> <\/defs> #> <g clip-path='url(#cpNTkuMDR8Njg5Ljc2fDU5LjA0fDUwMi41Ng==)'> #> <text x='374.40' y='285.36' text-anchor='middle' style='font-size: 12.00px; font-family: \"Liberation Sans\";' textLength='17.17px' lengthAdjust='spacingAndGlyphs'>Hi!<\/text> #> <\/g> #> <\/svg> dev.off() #> pdf  #>   2   s <- svgstring() plot(rnorm(5), rnorm(5)) s() #> <?xml version='1.0' encoding='UTF-8' ?> #> <svg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='720.00pt' height='576.00pt' viewBox='0 0 720.00 576.00'> #> <g class='svglite'> #> <defs> #>   <style type='text/css'><![CDATA[ #>     .svglite line, .svglite polyline, .svglite polygon, .svglite path, .svglite rect, .svglite circle { #>       fill: none; #>       stroke: #000000; #>       stroke-linecap: round; #>       stroke-linejoin: round; #>       stroke-miterlimit: 10.00; #>     } #>     .svglite text { #>       white-space: pre; #>     } #>   ]]><\/style> #> <\/defs> #> <rect width='100%' height='100%' style='stroke: none; fill: #FFFFFF;'/> #> <defs> #>   <clipPath id='cpMC4wMHw3MjAuMDB8MC4wMHw1NzYuMDA='> #>     <rect x='0.00' y='0.00' width='720.00' height='576.00' /> #>   <\/clipPath> #> <\/defs> #> <g clip-path='url(#cpMC4wMHw3MjAuMDB8MC4wMHw1NzYuMDA=)'> #> <\/g> #> <defs> #>   <clipPath id='cpNTkuMDR8Njg5Ljc2fDU5LjA0fDUwMi41Ng=='> #>     <rect x='59.04' y='59.04' width='630.72' height='443.52' /> #>   <\/clipPath> #> <\/defs> #> <g clip-path='url(#cpNTkuMDR8Njg5Ljc2fDU5LjA0fDUwMi41Ng==)'> #> <circle cx='280.43' cy='75.47' r='2.70' style='stroke-width: 0.75;' /> #> <circle cx='596.48' cy='486.13' r='2.70' style='stroke-width: 0.75;' /> #> <circle cx='82.40' cy='268.44' r='2.70' style='stroke-width: 0.75;' /> #> <circle cx='546.67' cy='268.01' r='2.70' style='stroke-width: 0.75;' /> #> <circle cx='666.40' cy='273.33' r='2.70' style='stroke-width: 0.75;' /> #> <\/g> #> <g clip-path='url(#cpMC4wMHw3MjAuMDB8MC4wMHw1NzYuMDA=)'> #> <line x1='70.42' y1='502.56' x2='643.19' y2='502.56' style='stroke-width: 0.75;' /> #> <line x1='70.42' y1='502.56' x2='70.42' y2='509.76' style='stroke-width: 0.75;' /> #> <line x1='165.88' y1='502.56' x2='165.88' y2='509.76' style='stroke-width: 0.75;' /> #> <line x1='261.35' y1='502.56' x2='261.35' y2='509.76' style='stroke-width: 0.75;' /> #> <line x1='356.81' y1='502.56' x2='356.81' y2='509.76' style='stroke-width: 0.75;' /> #> <line x1='452.27' y1='502.56' x2='452.27' y2='509.76' style='stroke-width: 0.75;' /> #> <line x1='547.73' y1='502.56' x2='547.73' y2='509.76' style='stroke-width: 0.75;' /> #> <line x1='643.19' y1='502.56' x2='643.19' y2='509.76' style='stroke-width: 0.75;' /> #> <text x='70.42' y='528.48' text-anchor='middle' style='font-size: 12.00px; font-family: \"Liberation Sans\";' textLength='23.42px' lengthAdjust='spacingAndGlyphs'>-2.5<\/text> #> <text x='165.88' y='528.48' text-anchor='middle' style='font-size: 12.00px; font-family: \"Liberation Sans\";' textLength='23.42px' lengthAdjust='spacingAndGlyphs'>-2.0<\/text> #> <text x='261.35' y='528.48' text-anchor='middle' style='font-size: 12.00px; font-family: \"Liberation Sans\";' textLength='23.42px' lengthAdjust='spacingAndGlyphs'>-1.5<\/text> #> <text x='356.81' y='528.48' text-anchor='middle' style='font-size: 12.00px; font-family: \"Liberation Sans\";' textLength='23.42px' lengthAdjust='spacingAndGlyphs'>-1.0<\/text> #> <text x='452.27' y='528.48' text-anchor='middle' style='font-size: 12.00px; font-family: \"Liberation Sans\";' textLength='23.42px' lengthAdjust='spacingAndGlyphs'>-0.5<\/text> #> <text x='547.73' y='528.48' text-anchor='middle' style='font-size: 12.00px; font-family: \"Liberation Sans\";' textLength='19.09px' lengthAdjust='spacingAndGlyphs'>0.0<\/text> #> <text x='643.19' y='528.48' text-anchor='middle' style='font-size: 12.00px; font-family: \"Liberation Sans\";' textLength='19.09px' lengthAdjust='spacingAndGlyphs'>0.5<\/text> #> <line x1='59.04' y1='441.64' x2='59.04' y2='95.99' style='stroke-width: 0.75;' /> #> <line x1='59.04' y1='441.64' x2='51.84' y2='441.64' style='stroke-width: 0.75;' /> #> <line x1='59.04' y1='372.51' x2='51.84' y2='372.51' style='stroke-width: 0.75;' /> #> <line x1='59.04' y1='303.38' x2='51.84' y2='303.38' style='stroke-width: 0.75;' /> #> <line x1='59.04' y1='234.25' x2='51.84' y2='234.25' style='stroke-width: 0.75;' /> #> <line x1='59.04' y1='165.12' x2='51.84' y2='165.12' style='stroke-width: 0.75;' /> #> <line x1='59.04' y1='95.99' x2='51.84' y2='95.99' style='stroke-width: 0.75;' /> #> <text transform='translate(41.76,441.64) rotate(-90)' text-anchor='middle' style='font-size: 12.00px; font-family: \"Liberation Sans\";' textLength='23.42px' lengthAdjust='spacingAndGlyphs'>-1.5<\/text> #> <text transform='translate(41.76,372.51) rotate(-90)' text-anchor='middle' style='font-size: 12.00px; font-family: \"Liberation Sans\";' textLength='23.42px' lengthAdjust='spacingAndGlyphs'>-1.0<\/text> #> <text transform='translate(41.76,303.38) rotate(-90)' text-anchor='middle' style='font-size: 12.00px; font-family: \"Liberation Sans\";' textLength='23.42px' lengthAdjust='spacingAndGlyphs'>-0.5<\/text> #> <text transform='translate(41.76,234.25) rotate(-90)' text-anchor='middle' style='font-size: 12.00px; font-family: \"Liberation Sans\";' textLength='19.09px' lengthAdjust='spacingAndGlyphs'>0.0<\/text> #> <text transform='translate(41.76,165.12) rotate(-90)' text-anchor='middle' style='font-size: 12.00px; font-family: \"Liberation Sans\";' textLength='19.09px' lengthAdjust='spacingAndGlyphs'>0.5<\/text> #> <text transform='translate(41.76,95.99) rotate(-90)' text-anchor='middle' style='font-size: 12.00px; font-family: \"Liberation Sans\";' textLength='19.09px' lengthAdjust='spacingAndGlyphs'>1.0<\/text> #> <polygon points='59.04,502.56 689.76,502.56 689.76,59.04 59.04,59.04 ' style='stroke-width: 0.75;' /> #> <text x='374.40' y='557.28' text-anchor='middle' style='font-size: 12.00px; font-family: \"Liberation Sans\";' textLength='53.12px' lengthAdjust='spacingAndGlyphs'>rnorm(5)<\/text> #> <text transform='translate(12.96,280.80) rotate(-90)' text-anchor='middle' style='font-size: 12.00px; font-family: \"Liberation Sans\";' textLength='53.12px' lengthAdjust='spacingAndGlyphs'>rnorm(5)<\/text> #> <\/g> #> <\/svg> dev.off() #> pdf  #>   2"},{"path":"https://svglite.r-lib.org/reference/xmlSVG.html","id":null,"dir":"Reference","previous_headings":"","what":"Run plotting code and return svg — xmlSVG","title":"Run plotting code and return svg — xmlSVG","text":"useful primarily testing. Requires xml2 package.","code":""},{"path":"https://svglite.r-lib.org/reference/xmlSVG.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run plotting code and return svg — xmlSVG","text":"","code":"xmlSVG(code, ..., standalone = FALSE, height = 7, width = 7)"},{"path":"https://svglite.r-lib.org/reference/xmlSVG.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run plotting code and return svg — xmlSVG","text":"code Plotting code execute. ... arguments passed svglite. standalone Produce standalone svg file? FALSE, omits xml header default namespace. height, width Height width inches.","code":""},{"path":"https://svglite.r-lib.org/reference/xmlSVG.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run plotting code and return svg — xmlSVG","text":"xml2::xml_document object.","code":""},{"path":"https://svglite.r-lib.org/reference/xmlSVG.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run plotting code and return svg — xmlSVG","text":"","code":"if (require(\"xml2\")) {   x <- xmlSVG(plot(1, axes = FALSE))   x   xml_find_all(x, \".//text\") } #> Loading required package: xml2 #> {xml_nodeset (2)} #> [1] <text x=\"266.40\" y=\"485.28\" text-anchor=\"middle\" style=\"font-siz ... #> [2] <text transform=\"translate(12.96,244.80) rotate(-90)\" text-ancho ..."},{"path":"https://svglite.r-lib.org/news/index.html","id":"svglite-development-version","dir":"Changelog","previous_headings":"","what":"svglite (development version)","title":"svglite (development version)","text":"Added support luminance masking (#174) Fixed bug calculating text widths using font features (#175) Added support path stroking filling (#174) Added support groups along affine transformation color blending. support Porter-Duff composition porly supported SVG (#174)","code":""},{"path":"https://svglite.r-lib.org/news/index.html","id":"svglite-213","dir":"Changelog","previous_headings":"","what":"svglite 2.1.3","title":"svglite 2.1.3","text":"CRAN release: 2023-12-08 Fix stack imbalance bug","code":""},{"path":"https://svglite.r-lib.org/news/index.html","id":"svglite-212","dir":"Changelog","previous_headings":"","what":"svglite 2.1.2","title":"svglite 2.1.2","text":"CRAN release: 2023-10-11 Windows: use libpng included Rtools R 4.2 . Add support dev.capabilities()","code":""},{"path":"https://svglite.r-lib.org/news/index.html","id":"svglite-211","dir":"Changelog","previous_headings":"","what":"svglite 2.1.1","title":"svglite 2.1.1","text":"CRAN release: 2023-01-10 Fix <cstdint> include request CRAN","code":""},{"path":"https://svglite.r-lib.org/news/index.html","id":"svglite-210","dir":"Changelog","previous_headings":"","what":"svglite 2.1.0","title":"svglite 2.1.0","text":"CRAN release: 2022-02-03 Add new graphics engine features: Path clipping Masking Pattern gradient fills Font family names now quoted (#136) svglite now renders leading white-space  nodes. (#131, @hrbrmstr)","code":""},{"path":"https://svglite.r-lib.org/news/index.html","id":"svglite-200","dir":"Changelog","previous_headings":"","what":"svglite 2.0.0","title":"svglite 2.0.0","text":"CRAN release: 2021-02-20 svglite now uses systemfonts text metric calculations font family lookup. svglite can now encode OpenType font features CSS used font contains registered features svglite now directly encodes raster data png instead rendering cairo. provided raster smaller final requested size resized. SVG’s can now get top-level id style definitions doesn’t spill surrounding HTML (#91) Dimensions now encoded top-level <svg> tag (#90) Starting new page creates new file filename supports (#98, @vandenman). inline devices now defaults dimensions svglite() (#89) Clip defs now written don’t already exist (#110) Clipping now defined outer groups instead element (#109) svglite now uses cpp11 instead Rcpp (#100) svgz output now supported natively (#6) Text adjustments now encoded css possible (#107) use textLength CSS property can now turned (#118) web font imports can now given creating svg (#108) Add scaling argument devices control line-width text scaling (#115) svg files written now valid times always_valid set TRUE svglite() call. svglite now guards attempts writing device new page requested (#126)","code":""},{"path":"https://svglite.r-lib.org/news/index.html","id":"svglite-123","dir":"Changelog","previous_headings":"","what":"svglite 1.2.3","title":"svglite 1.2.3","text":"CRAN release: 2020-02-07 radius circles longer expressed pt (#93, @vandenman). Dimensions smaller 1 now retain two significant figures (#94, @ilia-kats). @thomasp85 takes maintainer","code":""},{"path":"https://svglite.r-lib.org/news/index.html","id":"svglite-122","dir":"Changelog","previous_headings":"","what":"svglite 1.2.2","title":"svglite 1.2.2","text":"CRAN release: 2019-05-17 Improvements reproducibility generated SVGs: Negative zeros now treated positive, clip ID now generated truncated elements. svglite now uses polygon SVG element. ensures polygons properly closed (#82). Text metrics now correctly computed Unicode characters plotmath expressions (#81).","code":""},{"path":"https://svglite.r-lib.org/news/index.html","id":"svglite-121","dir":"Changelog","previous_headings":"","what":"svglite 1.2.1","title":"svglite 1.2.1","text":"CRAN release: 2017-09-11 release makes svglite compatible gdtools 0.1.6","code":""},{"path":"https://svglite.r-lib.org/news/index.html","id":"svglite-120","dir":"Changelog","previous_headings":"","what":"svglite 1.2.0","title":"svglite 1.2.0","text":"CRAN release: 2016-11-04","code":""},{"path":"https://svglite.r-lib.org/news/index.html","id":"new-features-1-2-0","dir":"Changelog","previous_headings":"","what":"New features","title":"svglite 1.2.0","text":"device functions gain system_fonts user_fonts arguments. Two new vignettes: vignette(\"fonts\") vignette(\"scaling\"). vignette fonts explains detail use new fonts arguments . vignette scaling goes scaling issues, e.g. embedding svglite outputs web page. xmlSVG() gains height width arguments (#66). New stringSVG() device function quick testing.","code":""},{"path":"https://svglite.r-lib.org/news/index.html","id":"improvements-1-2-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"svglite 1.2.0","text":"Greatly improves performance svgstring() (#58). Clip paths now get unique identifier avoid collisions multiple plots included document (#67). Raster graphics now correctly cropped (#64) handle transparency properly. dimensions text fields now hardcoded SVGs prevent alignment issues.","code":""},{"path":"https://svglite.r-lib.org/news/index.html","id":"bug-fixes-1-2-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"svglite 1.2.0","text":"editSVG() works (#56). dashes lines lwd < 1 scaled better (#68). Transparent blacks written correctly (#62, #63). Text now scaled correctly (#72, #59). See also new vignette scaling.","code":""},{"path":"https://svglite.r-lib.org/news/index.html","id":"svglite-110","dir":"Changelog","previous_headings":"","what":"svglite 1.1.0","title":"svglite 1.1.0","text":"CRAN release: 2016-02-09 Text metrics now converted points pixels (#45, #48) - fixes text alignment issues. Intermediate outputs always valid SVG (#53). New svgstring() returns plot string (#40, @yixuan). Use raster test compatible older versions R. Add support clip(). also fixes number minor issues grid graphics (@yixuan, #47 #49). Fix incorrect device size (#50).","code":""},{"path":"https://svglite.r-lib.org/news/index.html","id":"svglite-100","dir":"Changelog","previous_headings":"","what":"svglite 1.0.0","title":"svglite 1.0.0","text":"CRAN release: 2015-12-09 svglite fully featured svg graphics device works platforms, forked RSvgDevice. supports graphics device features: types line dashing supported (#15). line end line join styles supported (#24). Text now coloured, uses default fonts R (Arial, Times New Roman, Courier). Font metrics computed using gdtools package plotmath() strwidth() now work. Transparent colours now generated rgba() rather using stroke-opacity fill-opacity styles (#16). NA fills colours translated “none”. par(bg) affects background colour (#8). Rasters supported embedding base64-encoded pngs data url (#2). polypath() now supported, also allows showtext package render fonts correctly device (#36). also made tweaks rendered SVG: viewBox attribute <svg> set (width height): ’m reasonably certain makes easier use places (#12). Default styling properties specified global <style> element: reduces overall file size, make easier re-style output needs. can now produce single page per device - previously worked produced incorrect output (#5). Output longer contains dummy <desc> element (#4) added helper functions: xmlSVG() htmlSVG() make easier view generated SVG, either raw XML RStudio/browser. editSVG() opens SVG default SVG viewer/editor.","code":""}]
